Metadata-Version: 2.4
Name: xeo
Version: 0.1.0
Summary: A modular framework for building autonomous agent systems
Home-page: https://github.com/yourusername/xeo
Author: Your Name
Author-email: your.email@example.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: pydantic>=1.10.0
Requires-Dist: typing-extensions>=4.0.0
Requires-Dist: aiohttp>=3.8.0
Provides-Extra: llm
Requires-Dist: google-generativeai>=0.3.0; extra == "llm"
Requires-Dist: python-dotenv>=0.19.0; extra == "llm"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Xeo

A modular, scalable, and maintainable framework for building autonomous agent systems.

## Features

- **Agents**: Create and manage autonomous agents with different capabilities
- **Teams**: Form teams of agents with role-based collaboration
- **LLM Integration**: First-class support for large language models (Gemini, etc.)
- **Models**: Integrate various AI/ML models (LLMs, embeddings, etc.)
- **Tools**: Extend agent capabilities with custom tools
- **Memory**: Short-term and long-term memory systems
- **Knowledge**: Knowledge representation and management
- **Workflows**: Define and execute complex agent workflows
- **API**: RESTful API for interacting with the framework
- **Observability**: Built-in monitoring and logging

## Installation

1. Clone the repository:
   ```bash
   git clone https://github.com/yourusername/xeo.git
   cd xeo
   ```

2. Create and activate a virtual environment (recommended):
   ```bash
   python -m venv venv
   source venv/bin/activate  # On Windows: venv\Scripts\activate
   ```

3. Install dependencies:
   ```bash
   pip install -r requirements-llm.txt
   pip install -e .
   ```

## Quick Start

### Basic Agent Example

```python
from xeo.core.agent import Agent, AgentConfig, AgentType

# Create an agent config
config = AgentConfig(
    name="assistant",
    agent_type=AgentType.AUTONOMOUS,
    description="A helpful assistant agent"
)

# Create an agent
agent = Agent(config)
```

### LLM Integration Example

```python
import asyncio
from xeo.llm import create_llm, LLMType

async def main():
    # Initialize the Gemini LLM
    gemini = create_llm(
        llm_type=LLMType.GEMINI,
        model_name="gemini-pro",
        api_key="your-google-api-key"  # Or use environment variable GOOGLE_API_KEY
    )
    
    # Generate text
    response = await gemini.generate("Tell me a joke about programming.")
    print(response)

if __name__ == "__main__":
    asyncio.run(main())
```

## Documentation

For detailed documentation, please see the [docs](./docs) directory.

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.
